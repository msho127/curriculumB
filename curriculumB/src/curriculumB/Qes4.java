package curriculumB;

public class Qes4 {
	

	public static void main(String[] args) {
	
	/*----------------------------------
    [概要] 
    [詳細] 
   ----------------------------------*/
	int[] numbers = { 1,2,3,4,5 };
	for( int i = 0; i <= 4; i++ ) {
		System.out.println( numbers[i] );
	}
	System.out.println();
		
	//	int 型の配列 を作成し、1, 2, 3, 4, 5 を格納する
	//	配列の全要素を 順番に表示
		
	/*----------------------------------
    [概要] 
	[詳細] 
	----------------------------------*/
	numbers = new int[] {10, 20, 30, 40, 50};
	for( int i = 4; i >= 0; i-- ) {
		System.out.println( numbers[i] );
	}
	System.out.println();
	
	//	int 型の配列 {10, 20, 30, 40, 50} を用意する
	//	配列の要素を 逆順 に表示
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
	numbers = new int[] {3, 5, 7, 9, 11};
	int sum = 0;
	for( int i = 0; i <= 4; i++ ) {
		sum += numbers[i];
	}
	System.out.println( sum );
	System.out.println();
	
		
	//	int 型の配列 {3, 5, 7, 9, 11} を用意する
	//	配列の全要素の 合計値 を計算し、表示
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
	numbers = new int[] {12, 7, 9, 21, 5 , 18};
    int max = numbers[0];
    int min = numbers[0];
    for (int num : numbers) {
        if (num > max) {
            max = num;
        }
        if (num < min) {
            min = num;
        }
    }

    System.out.println("最大値: " + max);
    System.out.println("最小値: " + min);
    System.out.println();
	
	//	int 型の配列 {12, 7, 9, 21, 5, 18} を用意する
	//	配列の 最大値と最小値 を求めて表示
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
		
    numbers = new int[] {1, 2, 3, 4, 5};
    // 各要素を2倍にする（通常のfor文で処理）
    for (int i = 0; i < numbers.length; i++) {
        numbers[i] = numbers[i] * 2;
    }
    System.out.println("2倍にした配列の要素：");
    for (int num : numbers) {
        System.out.print(num + " ");
    }

    System.out.println();
    
    
	//	int 型の配列 {1, 2, 3, 4, 5} を用意する
	//	配列のすべての要素を 2 倍 し、結果を表示
	//	結果を表示する際の処理に拡張for文を使用してください
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
	
	//	int 型の配列 {4, 7, 10, 15, 20} を用意する
	//	ユーザーが入力した数が 配列に含まれているか を判定し、結果を表示
	//	結果：（”入力した値”は配列に含まれています／含まれていません）
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
		
	//	2次元配列 int[][] array = {{1, 2}, {3, 4}, {5, 6}}; を用意する
	//	配列の すべての要素を表示 
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
		
	//	2次元配列 int[][] array = {{10, 20, 30}, {40, 50, 60}, {70, 80, 90}}; を用意する
	//	配列の すべての要素の合計値を表示
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
	
	//	2次元配列 int[][] array = {{12, 15, 8}, {6, 19, 25}, {30, 2, 10}}; を用意する
	//	配列内の 最大値と最小値 を求めて表示
	
		/*----------------------------------
	    [概要] 
	    [詳細] 
	   ----------------------------------*/
	
	//	3次元配列 int[][][] array = {{{1, 2}, {3, 4}}, {{5, 6}, {7, 8}}}; を用意する
	//	配列内のすべての要素を 表示
	}
}
